options {Ignore_Case = false;  Build_Parser=false; }

PARSER_BEGIN (Texto)
public class Texto { }
PARSER_END (Texto)

TOKEN: { < # caracter : ~["\n","\r"] > }
TOKEN: { < # letras : ["a"-"z", "ñ"]> }
TOKEN: { < # mayusculas : ["A"-"Z", "Ñ"]> }
TOKEN: { < # digitos : ["0"-"9"]> }
TOKEN: { < # coma : [","]> }
TOKEN: { < # punto : ["."]> }
TOKEN: { < # blancos : [" ","\t"]> }
TOKEN: { < # finlinea : "\n" | "\r\n" >  }
TOKEN: { < # suspenso : ["0"-"4"]> }
TOKEN: { < # aprobado : ["5"-"9"]> }
TOKEN: { < # matri : <letras><letras><nummatricula> > }
TOKEN: { < # nummatricula: ("0"["1"-"9"]<digitos><digitos>)|("1000") >}
TOKEN: { < # nombresimple : <mayusculas> <caracter><caracter>(<caracter>)* > }
TOKEN: { < # nombrecompuesto : (<mayusculas> <punto> <blancos> <nombresimple>) | (<nombresimple> <blancos> <mayusculas> <punto>) > }

TOKEN: { < teoriaaprobada: "Nota teorica:" <blancos> <aprobado> ((<coma>|<punto>) (<digitos>){1,2})? >}
TOKEN: { < teoriasuspensa: "Nota teorica:" <blancos> <suspenso> ((<coma>|<punto>) (<digitos>){1,2})? >}
TOKEN: { < practicaaprobada: "Nota practica:" <blancos> <aprobado> ((<coma>|<punto>) (<digitos>){1,2})? >}
TOKEN: { < practicasuspensa: "Nota practica:" <blancos> <suspenso> ((<coma>|<punto>) (<digitos>){1,2})? >}
TOKEN: { < matricula: "Matricula:" (<blancos>)+ <matri> (<finlinea>)+ >}
TOKEN: { < nombreyapellidos: "Nombre y apellidos:" <blancos> <nombresimple> <nombresimple> <coma> <blancos> (<nombresimple>|<nombrecompuesto>) >}
TOKEN: { < opcional: "*" (<caracter>)* >} 
TOKEN: { < patron1 : <matricula> <nombreyapellidos> (<finlinea>)+ <teoriaaprobada> (<finlinea>)+ <practicaaprobada> (<finlinea>)+ (<opcional>)? > } 
TOKEN: { < patron2 : <matricula> <nombreyapellidos> (<finlinea>)+ <teoriaaprobada> (<finlinea>)+ <practicasuspensa> (<finlinea>)+ (<opcional>)+ > }
TOKEN: { < patron3 : <matricula> <nombreyapellidos> (<finlinea>)+ <teoriasuspensa> (<finlinea>)+ <practicaaprobada> (<finlinea>)+ (<opcional>)+ > }
TOKEN: { < patron4 : <matricula> <nombreyapellidos> (<finlinea>)+ <teoriasuspensa> (<finlinea>)+ <practicasuspensa> (<finlinea>)+ (<opcional>)+ > }
TOKEN: { < findelinea: <finlinea> >}

//TOKEN: { < otroCaracter : ~[] > }
